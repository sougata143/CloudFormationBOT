AWSTemplateFormatVersion: '2010-09-09'
Description: 'Jenkins Pipeline Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Deployment environment
  
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: microserviceenv

  VpcId:
    Description: Optional VPC ID for Jenkins resources
    Type: String
    Default: ''

Conditions:
  CreateVpcResources: 
    !Equals 
      - !Ref VpcId
      - ''

Resources:
  # IAM Role for Jenkins Master
  JenkinsMasterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-jenkins-master-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ec2.amazonaws.com
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
      Policies:
        - PolicyName: JenkinsMasterPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - ec2:*
                  - ecs:*
                  - ecr:*
                  - iam:PassRole
                Resource: '*'

  # Security Group for Jenkins Master
  JenkinsMasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jenkins Master
      VpcId: 
        !If 
          - CreateVpcResources
          - !Ref AWS::NoValue
          - !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

Outputs:
  JenkinsMasterRoleArn:
    Description: ARN of Jenkins Master IAM Role
    Value: !GetAtt JenkinsMasterRole.Arn
    Export:
      Name: !Sub ${EnvironmentName}-JenkinsMasterRoleArn

  JenkinsMasterSecurityGroupId:
    Description: Security Group ID for Jenkins Master
    Value: !Ref JenkinsMasterSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-JenkinsMasterSecurityGroupId