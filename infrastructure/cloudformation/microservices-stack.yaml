AWSTemplateFormatVersion: '2010-09-09'
Description: Microservices Infrastructure Stack

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Deployment environment

  MicroserviceImageUri:
    Type: String
    Description: ECR image URI for microservice

Resources:
  # Existing WebACL with corrected YAML formatting
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub "${Environment}-web-acl"
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub "${Environment}WebACLMetrics"
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: !Sub "${Environment}AWSManagedRulesCommonRuleSet"

  # Preserve existing resources like CloudWatchLogGroup, ECSCluster, etc.
  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/microservices/${Environment}"
      RetentionInDays: 30

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Environment}-microservices-cluster"
      ClusterSettings:
        - Name: containerInsights
          Value: enabled

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Environment}-microservice-task"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSExecutionRole
      ContainerDefinitions:
        - Name: microservice
          Image: !Ref MicroserviceImageUri
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: microservice

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

# Preserve any existing Outputs
Outputs:
  WebACLArn:
    Description: Web ACL ARN
    Value: !GetAtt WebACL.Arn
  
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster