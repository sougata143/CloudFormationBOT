AWSTemplateFormatVersion: '2010-09-09'
Description: 'Disaster Recovery and Backup Strategy'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: ['dev', 'staging', 'prod']
    Description: Deployment environment
  
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: microserviceenv

  KMSKeyArn:
    Description: Optional KMS Key ARN for encryption
    Type: String
    Default: ''

Conditions:
  HasKMSKeyArn: 
    !Not 
      - !Equals 
        - !Ref KMSKeyArn
        - ''
  
  CreateKMSKey: 
    !Equals 
      - !Ref KMSKeyArn
      - ''

Resources:
  # KMS Key for Encryption (if not provided)
  BackupKMSKey:
    Type: AWS::KMS::Key
    Condition: CreateKMSKey
    Properties:
      Description: !Sub KMS Key for ${EnvironmentName} Disaster Recovery Backups
      Enabled: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: 
              - kms:*
            Resource: '*'
          - Sid: Allow Backup Service
            Effect: Allow
            Principal:
              Service: backup.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: '*'

  # S3 Backup Bucket
  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${EnvironmentName}-disaster-recovery-backup
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: 
                !If 
                  - HasKMSKeyArn
                  - !Ref KMSKeyArn
                  - !GetAtt BackupKMSKey.Arn

  # RDS Backup Vault
  RDSBackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: !Sub ${EnvironmentName}-RDS-Backup-Vault
      EncryptionKeyArn: 
        !If 
          - HasKMSKeyArn
          - !Ref KMSKeyArn
          - !GetAtt BackupKMSKey.Arn

  # Backup Plan for RDS
  RDSBackupPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: !Sub ${EnvironmentName}-RDS-Backup-Plan
        BackupPlanRule:
          - RuleName: DailyBackups
            TargetBackupVault: !Ref RDSBackupVault
            ScheduleExpression: cron(0 5 ? * * *)
            StartWindowMinutes: 60
            CompletionWindowMinutes: 120
            Lifecycle:
              DeleteAfterDays: 30

Outputs:
  BackupBucketName:
    Description: Backup S3 Bucket Name
    Value: !Ref BackupBucket
    Export:
      Name: !Sub ${EnvironmentName}-BackupBucketName

  RDSBackupVaultName:
    Description: RDS Backup Vault Name
    Value: !Ref RDSBackupVault
    Export:
      Name: !Sub ${EnvironmentName}-RDSBackupVaultName

  KMSKeyArn:
    Description: KMS Key ARN used for Backup Encryption
    Value: 
      !If 
        - HasKMSKeyArn
        - !Ref KMSKeyArn
        - !GetAtt BackupKMSKey.Arn
    Export:
      Name: !Sub ${EnvironmentName}-KMSKeyArn